/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
    id 'maven'
    id 'signing'
}

group = 'uk.co.tryteksystems'
archivesBaseName = "should-send-same-site-none"
version = '0.1.0'

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'nl.basjes.parse.useragent:yauaa:5.21'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    // Use JUnit test framework
    testCompile("org.junit.jupiter:junit-jupiter-params:5.7.0")
    testCompile ('org.junit.jupiter:junit-jupiter:5.6.0')

    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")
}

test {
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

artifacts {
    archives sourceJar
}

signing {
    sign configurations.archives
}

publishing {
    repositories {
        maven {
            name = "staging"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }

    publications {
        shouldSendSameSiteNone(MavenPublication) {
            groupId = 'uk.co.autotrader'
            artifactId = 'should-send-same-site-none'
            version = '0.1.0'

            from components.java
            artifact sourceJar

            pom {
                name  = 'Should send same site none'
                description = 'Library to determine if the SameSite=None cookie attribute should be sent for a given user agent.'
                url =  'https://github.com/stephen-murby/should-send-same-site-none-java'
                packaging = 'jar'
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = 'stephen.murby'
                        name = 'Stephen Murby'
                        email = 'stephen.murby@autotrader.co.uk'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:stephen-murby/should-send-same-site-none-java.git'
                    developerConnection = 'scm:git:https://github.com/stephen-murby/should-send-same-site-none-java'
                    url = 'https://github.com/stephen-murby/should-send-same-site-none-java.git'
                }
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Should send same site none'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Library to determine if the SameSite=None cookie attribute should be sent for a given user agent.'
                url 'https://github.com/stephen-murby/should-send-same-site-none-java'

                scm {
                    connection 'scm:git:git@github.com:stephen-murby/should-send-same-site-none-java.git'
                    developerConnection 'scm:git:https://github.com/stephen-murby/should-send-same-site-none-java'
                    url 'https://github.com/stephen-murby/should-send-same-site-none-java.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'stephen.murby'
                        name 'Stephen Murby'
                        email 'stephen.murby@autotrader.co.uk'
                    }
                }
            }
        }
    }
}